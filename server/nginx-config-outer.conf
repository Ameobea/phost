# Match requests to the root domain (no subdomain) and route them to the API server
server {
    server_name ameo.design;

    location / {
        proxy_pass http://localhost:4300/;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ameo.design/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ameo.design/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Match *.ameo.design
server {
    server_name "~^(?<subdomain>[A-Za-z0-9](?:[A-Za-z0-9\-]{0,61}[A-Za-z0-9])?)\.ameo\.design$";

    # Force trailing slash
    rewrite ^/v/([^/]+)$ /v/$1/;

    # Handle explicit versions
    location ~/v/(?<after_version_path>.+) {
        resolver 127.0.0.1;
        proxy_pass http://v.localhost:4300/$subdomain/$after_version_path;
    }

    location ~/(?<after_path>.*) {
        proxy_pass http://localhost:4300/__HOSTED/$subdomain/$after_path;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ameo.design/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ameo.design/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Handle proxied requests
server {
    server_name "~^(?<subdomain>[A-Za-z0-9](?:[A-Za-z0-9\-]{0,61}[A-Za-z0-9])?)\.p\.?ameo\.design$";

    location ~/(?<after_path>.*) {
        resolver 127.0.0.1;
        proxy_pass http://localhost:4301/$subdomain/$after_path;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ameo.design/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ameo.design/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# HTTP->HTTPS Redirect
server {
    listen 80;
    server_name "~^.*ameo\.design$";

    return 301 https://$host$request_uri;
}
